# -*- mode: conf; -*-
# All option values are case sensitive unless other noted.

# List of modifiers:
#  - Control (aliases: C, Ctrl)
#  - Shift (aliases: S)
#  - Mod1 (aliases: A, Alt)
#  - Mod4 (aliases: U, Super)

# List of keys can be obtained with --print-keys option.

[SETTINGS]
# Keyboard Layout. This is used to produce suffix keys close to base keys.
# Possible values: Dvorak, QWERTY, QWERTZ, AZERTY.
keyboard_layout = QWERTY

# Keybinding prefix consists of a series of modifiers and/or keys
# separated by +
# Examples: Ctrl+Alt, U+a, A+x+w, F12, XF86_RotateWindows
prefix = Super

# All windows of the same application are grouped. Windows of the same
# group are bound to the keys with the same base. The following option
# specifies which windows should belong to the same group.
# Possible values:
#  - AWN -- two windows belong to the same group if they have equal awns.
#  - Group -- group windows as window manager normally does.
#  - None -- do not group at all.
group_windows_by = AWN

# Put shortcuts in window titles.
# %t and %s are replaced by window title and shortcut accordingly.
# Only one occurrence of %t and %s in title_format is allowed.
# Set to None not to modify window titles.
title_format = %t   /%s/

# Action when the window is not on the current desktop.
# Possible values:
#  - SwitchDesktop -- switch to the desktop which the window is on.
#  - MoveWindow -- move the window to the current desktop.
#  - None -- just activate the window (actual behaviour may differ
# in different window managers).
desktop_action = SwitchDesktop

# List of allowed window types.
# Possible values:
#   All NORMAL DIALOG UTILITY MENU TOOLBAR DESKTOP DOCK SPLASH
window_types = NORMAL DIALOG UTILITY MENU

# History of shortcuts is used to prevent them floating between
# different windows across the sessions.
# Set history_length to 0 to disable history.
history_length = 0

[HISTORY]
wireshark = b
xfce4-appfinder = r
xfce4-notifyd = x
subl3 = l
wrapper = w
xfce4-panel = y
xfce4-orageclock-plugin = j
orage = n
xfce4-verve-plugin = g
xfce4-sensors-plugin = x
xfce4-notes-settings = z
thunar = u
pavucontrol = o
xfce4-mixer = m
firefox = q
xfwm4-settings = x
xfwm4-tweaks-settings = w
xfce4-keyboard-settings = k
parole = d
xnview = i

[RULES]
# This section specifies rules according to which window classes or names
# (titles) are transformed to abstract window names (AWNs). When a new
# window appears, the program tries out the rules (from top to bottom)
# until it finds out one that matches the window property. If no
# suitable rule is found a window class will be assigned to AWN.

# AWNs are used to determine window shortcuts.  For example, if AWN is
# 'xterm' than keybinding will more likely 'mod+x'. If it is already
# assigned to another window or is used by an another program the next
# keybinding to try out will be 'mod+t'. It sorts out the alphabetical
# characters of AWN until it finds one whose corresponding key is not
# grabbed. If it turns out there is no such a key, the window will be
# bound to any different unused key.

# Format:
# property.[regex] = [[!]awn]
# where property is one of the following: title, class, instance.

# regex matching is case insensitive. awn may contain backreferences,
# e.g. \1 is replaced with the first group of regex. If awn is omitted
# the window will not be bound to any of keys. If regex is omitted it
# implies windows without the property or with empty property. Exclamation
# mark before awn denotes that the shortcut should be permanent. Only the
# first symbol after ! is used to compose a shortcut. Permanent shortcuts
# have a higher priority than history shortcuts and other rules, and they
# are never assigned to different windows.

# Examples:

# set awn to firefox for all the windows whose titles end with firefox
# title..*firefox$ = firefox

# remove prefix gnome- from window classes
# class.gnome-(.*) = \1

# transform classes icecat, iceweasel, and icedove to awns cat, weasel, and
# dove respectively
# class.ice(cat|weasel|dove) = \1

# don't bind windows that don't have class property
# class. =

# always bind emacs window to 'e'
# class.emacs = !e
class.firefox = !f
class.xfce4-terminal = !t
class.skype = !s
class.chromium = !c
class.virt-manager = !v
class.evince = !e
class.hexchat = !h

# In place of property a template can be specified. template
# combines different properties within one rule. With regular expressions
# it is possible to simulate logical operators.

# Ignore window with class myclass only if its title isn't mytitle:
# class and not title.myclass and not (?!mytitle$) =

